{"version":3,"file":"component---src-pages-printable-sections-skill-section-tsx-7c34e8d1651cc8864622.js","mappings":"yLAaO,MAAMA,GAAgBC,EAAAA,EAAAA,eAAiC,CAC5DC,YAAa,IA6Bf,I,UCjCA,MANoBC,KACHC,EAAAA,EAAAA,YAAWJ,GAEZE,YAAcG,EAAAA,C,qCCgB9B,IArB0BC,KACxB,MAAMC,GAAWJ,EAAAA,EAAAA,KAiBjB,MAAO,CAAEK,KAfKC,GAYL,UAXUF,EAIJ,MADCE,EAEG,MAEAC,KAAKC,MAAa,GAAPF,EAAa,IAAM,GAN3CA,GAUoBG,iBAGX,C,0ECFjB,UAVqBC,IAAqC,IAApC,SAAEC,GAA6BD,EACnD,MAAM,KAAEL,IAASF,EAAAA,EAAAA,KAEjB,OACES,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,KAAKT,KAAMU,EAAAA,EAAKC,KAAMV,KAAMD,EAAK,MAAMM,SAC7CA,GACI,C,oFC0EX,UA5BqBD,IAA2B,MAALA,EACzC,MAAM,EAAEO,IAAMC,EAAAA,EAAAA,kBAEd,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAT,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAAAV,UACHC,EAAAA,EAAAA,KAACU,EAAAA,QAAY,CAAAX,SAAC,YAGhBC,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CAACC,OAAQ,UAEhBL,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,oBAAoB,WAAWC,IAAK,MAAMhB,SAAA,EAC9CC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAF,SAAC,SAENC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACR,KAAMU,EAAAA,EAAKa,cAAeC,UAAW,kBAAkBlB,SAAC,gCAI9DC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAF,SAAC,SAENC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACR,KAAMU,EAAAA,EAAKa,cAAcjB,SAAC,0CAIjC,C,yBCpFFI,EAAI,SAAJA,GAAI,OAAJA,EAAI,sBAAJA,EAAI,4BAAJA,EAAI,uBAAJA,EAAI,yBAAJA,EAAI,wBAAJA,EAAI,0BAAJA,EAAI,sBAAJA,EAAI,2BAAJA,EAAI,uBAAJA,EAAI,gCAAJA,CAAI,EAAJA,GAAI,IAaT,K,uDCbO,MAAMb,EAAmB,G","sources":["webpack://dohyun-ko.github.io/./src/App.tsx","webpack://dohyun-ko.github.io/./src/hooks/useIsMobile.tsx","webpack://dohyun-ko.github.io/./src/hooks/useResponsiveFont.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/SectionTitle.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/SkillSection.tsx","webpack://dohyun-ko.github.io/./src/types/Font.ts","webpack://dohyun-ko.github.io/./src/utils/const.ts"],"sourcesContent":["import { createContext, useLayoutEffect, useState } from \"react\";\nimport { BrowserRouter, Routes } from \"react-router-dom\";\n\nexport enum RoutePath {\n  HOME = \"/\",\n  RESUME = \"/resume\",\n  PRINTABLE = \"/printable\",\n}\n\ntype LayoutContextType = {\n  windowWidth: number;\n};\n\nexport const LayoutContext = createContext<LayoutContextType>({\n  windowWidth: 0,\n});\n\nfunction App() {\n  const [windowWidth, setWindowWidth] = useState(0);\n\n  useLayoutEffect(() => {\n    const updateWidth = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        windowWidth,\n      }}\n    >\n      <BrowserRouter>\n        <Routes></Routes>\n      </BrowserRouter>\n    </LayoutContext.Provider>\n  );\n}\n\nexport default App;\n","import { LayoutContext } from \"@/App\";\nimport { MOBILE_MAX_WIDTH } from \"@/utils/const\";\nimport { useContext } from \"react\";\n\nconst useIsMobile = () => {\n  const layout = useContext(LayoutContext);\n\n  return layout.windowWidth < MOBILE_MAX_WIDTH;\n};\n\nexport default useIsMobile;\n","import useIsMobile from './useIsMobile';\n\nconst useResponsiveFont = () => {\n  const isMobile = useIsMobile();\n\n  const font = (size: number) => {\n    const resized = !isMobile\n      ? size\n      : (() => {\n          switch (size) {\n            case 3.5:\n              return 2.375;\n            default:\n              return Math.round(size * 0.8 * 16) / 16;\n          }\n        })();\n\n    return `text-[${resized.toString()}rem]`;\n  };\n\n  return { font };\n};\n\nexport default useResponsiveFont;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport { Text } from \"@dohyun-ko/react-atoms\";\n\ninterface SectionTitleProps {\n  children?: React.ReactNode;\n}\n\nconst SectionTitle = ({ children }: SectionTitleProps) => {\n  const { font } = useResponsiveFont();\n\n  return (\n    <Text as=\"h1\" font={Font.Bold} size={font(1.25)}>\n      {children}\n    </Text>\n  );\n};\n\nexport default SectionTitle;\n","import Font from \"@/types/Font\";\nimport { Flex, Grid, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport SectionTitle from \"../components/SectionTitle\";\n\nconst mapFont = (level: number): Font => {\n  switch (level) {\n    case 1:\n      return Font.Thin;\n    case 2:\n      return Font.Light;\n    case 3:\n      return Font.Medium;\n    case 4:\n      return Font.Bold;\n    case 5:\n      return Font.Black;\n    default:\n      return Font.Regular;\n  }\n};\n\ninterface SkillSectionProps {}\n\nconst skills = [\n  {\n    name: \"React\",\n    level: 5,\n  },\n  {\n    name: \"TypeScript\",\n    level: 4,\n  },\n  {\n    name: \"Next.js\",\n    level: 3,\n  },\n\n  {\n    name: \"Python\",\n    level: 3,\n  },\n  {\n    name: \"NestJS\",\n    level: 2,\n  },\n  {\n    name: \"FastAPI\",\n    level: 2,\n  },\n  {\n    name: \"Flutter\",\n    level: 2,\n  },\n  {\n    name: \"C++\",\n    level: 2,\n  },\n];\n\nconst SkillSection = ({}: SkillSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Flex>\n        <SectionTitle>보유기술</SectionTitle>\n      </Flex>\n\n      <Spacer height={\"10px\"} />\n\n      <Grid gridTemplateColumns=\"70px 1fr\" gap={\"0px\"}>\n        <Text>전문:</Text>\n\n        <Text font={Font.SourceCodePro} className={\"source-code-pro\"}>\n          React&nbsp; TypeScript&nbsp; Next.js\n        </Text>\n\n        <Text>활용:</Text>\n\n        <Text font={Font.SourceCodePro}>\n          Python&nbsp; NestJS&nbsp; FastAPI&nbsp; Flutter\n        </Text>\n      </Grid>\n    </>\n  );\n};\n\nexport default SkillSection;\n","enum Font {\n  Thin = \"PretendardW100\",\n  ExtraLight = \"PretendardW200\",\n  Light = \"PretendardW300\",\n  Regular = \"PretendardW400\",\n  Medium = \"PretendardW500\",\n  SemiBold = \"PretendardW600\",\n  Bold = \"PretendardW700\",\n  ExtraBold = \"PretendardW800\",\n  Black = \"PretendardW900\",\n  SourceCodePro = \"Source Code Pro\",\n}\n\nexport default Font;\n","export const MOBILE_MAX_WIDTH = 768;\n"],"names":["LayoutContext","createContext","windowWidth","useIsMobile","useContext","MOBILE_MAX_WIDTH","useResponsiveFont","isMobile","font","size","Math","round","toString","_ref","children","_jsx","Text","as","Font","Bold","t","useTranslation","_jsxs","_Fragment","Flex","SectionTitle","Spacer","height","Grid","gridTemplateColumns","gap","SourceCodePro","className"],"sourceRoot":""}