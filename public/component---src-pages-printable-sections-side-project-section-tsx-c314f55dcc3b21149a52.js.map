{"version":3,"file":"component---src-pages-printable-sections-side-project-section-tsx-c314f55dcc3b21149a52.js","mappings":"sNAqDA,UAzCoBA,IAAmC,IAAlC,QAAEC,GAA2BD,EAChD,MAAM,KAAEE,EAAI,IAAEC,EAAG,YAAEC,EAAW,SAAEC,EAAQ,WAAEC,EAAU,UAAEC,EAAS,QAAEC,GAC/DP,EAEF,OACEQ,EAAAA,EAAAA,MAAA,OAAKC,WAAWC,EAAAA,EAAAA,IAAQ,YAAYC,EAAAA,EAAAA,GAAK,MAAOC,SAAA,EAC9CJ,EAAAA,EAAAA,MAACK,EAAAA,EAAQ,CAACC,KAAMZ,EAAIU,SAAA,EAClBG,EAAAA,EAAAA,KAAA,MAAIN,WAAWC,EAAAA,EAAAA,IAAQ,iBAAiBC,EAAAA,EAAAA,GAAK,IAAIC,SAAEX,IAElDC,IAAOa,EAAAA,EAAAA,KAAA,QAAMN,WAAWE,EAAAA,EAAAA,GAAK,KAAMC,UAAEI,EAAAA,EAAAA,GAAUd,SAGlDM,EAAAA,EAAAA,MAAA,QAAMC,WAAWE,EAAAA,EAAAA,GAAK,KAAMC,SAAA,EACzBK,EAAAA,EAAAA,GAAgB,IAAIC,KAAKZ,IAAY,KAAG,IACxCC,GAAUU,EAAAA,EAAAA,GAAgB,IAAIC,KAAKX,IAAY,SAGjDJ,IACCK,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACEG,EAAAA,EAAAA,KAAA,OAAKN,UAAW,aAChBM,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CAAAR,SAAET,OAInBC,GAAYA,EAASiB,OAAS,IAC7Bb,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACEG,EAAAA,EAAAA,KAAA,OAAKN,UAAW,aAEhBM,EAAAA,EAAAA,KAAA,MAAIN,UAAW,qBAAqBG,SACjCR,EAASkB,KAAKlB,IACbW,EAAAA,EAAAA,KAAA,MAAAH,UACEG,EAAAA,EAAAA,KAAA,KAAGN,WAAWE,EAAAA,EAAAA,GAAK,KAAMC,SAAER,KADpBA,YAOb,C,+DCrCV,UALqBL,IAAqC,IAApC,SAAEa,GAA6Bb,EACnD,OAAOgB,EAAAA,EAAAA,KAAA,MAAIN,WAAWC,EAAAA,EAAAA,IAAQ,aAAaC,EAAAA,EAAAA,GAAK,OAAOC,SAAEA,GAAc,C,0ECmBzE,UApB2Bb,IAAiC,MAALA,EACrD,MAAM,EAAEwB,IAAMC,EAAAA,EAAAA,kBAEd,OACEhB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACEG,EAAAA,EAAAA,KAACU,EAAAA,QAAY,CAAAb,SAAC,mBAEdG,EAAAA,EAAAA,KAAA,OAAKN,UAAW,WAEhBM,EAAAA,EAAAA,KAAA,OAAKN,UAAW,2BAA2BG,SACvCW,EAAE,2BAA4B,CAAEG,eAAe,IAC9CC,QAAQC,GAAgBA,EAAYC,cACpCP,KAAKM,IACJb,EAAAA,EAAAA,KAACe,EAAAA,QAAW,CAAwB9B,QAAS4B,GAA3BA,EAAY3B,YAGnC,C,qBCnBP,IAJmBC,GACVA,EAAI6B,QAAQ,WAAY,IAAIA,QAAQ,UAAW,IAAIA,QAAQ,MAAO,G","sources":["webpack://dohyun-ko.github.io/./src/pages/printable/components/ProjectCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/SectionTitle.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/SideProjectSection.tsx","webpack://dohyun-ko.github.io/./src/utils/formatUrl.ts"],"sourcesContent":["import Project from '@/types/Project';\nimport { formatYearMonth } from '@/utils/dateFormats';\nimport font from '@/utils/font';\nimport formatUrl from '@/utils/formatUrl';\nimport ReactMarkdown from 'react-markdown';\nimport { twMerge } from 'tailwind-merge';\nimport StylessA from '../../../components/StylessA';\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const { name, url, description, whatIDid, techStacks, startedAt, endedAt } =\n    project;\n\n  return (\n    <div className={twMerge('flex-col', font(0.75))}>\n      <StylessA href={url}>\n        <h3 className={twMerge('font-semibold', font(1))}>{name}</h3>\n\n        {url && <span className={font(0.75)}>{formatUrl(url)}</span>}\n      </StylessA>\n\n      <span className={font(0.75)}>\n        {formatYearMonth(new Date(startedAt))} â€“{' '}\n        {endedAt ? formatYearMonth(new Date(endedAt)) : 'Now'}\n      </span>\n\n      {description && (\n        <>\n          <div className={'h-[5px]'} />\n          <ReactMarkdown>{description}</ReactMarkdown>\n        </>\n      )}\n\n      {whatIDid && whatIDid.length > 0 && (\n        <>\n          <div className={'h-[5px]'} />\n\n          <ul className={'m-0 list-disc pl-5'}>\n            {whatIDid.map((whatIDid) => (\n              <li key={whatIDid}>\n                <p className={font(0.75)}>{whatIDid}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import font from '@/utils/font';\nimport { twMerge } from 'tailwind-merge';\n\ninterface SectionTitleProps {\n  children?: React.ReactNode;\n}\n\nconst SectionTitle = ({ children }: SectionTitleProps) => {\n  return <h2 className={twMerge('font-bold', font(1.25))}>{children}</h2>;\n  // set to h2 instead of h1 since printable resume does not have section tags\n};\n\nexport default SectionTitle;\n","import Project from '@/types/Project';\nimport { useTranslation } from 'react-i18next';\nimport ProjectCard from '../components/ProjectCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface SideProjectSectionProps {}\n\nconst SideProjectSection = ({}: SideProjectSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Side Projects</SectionTitle>\n\n      <div className={'h-2.5'} />\n\n      <div className={'flex flex-col gap-[15px]'}>\n        {(t('sideProject.sideProjects', { returnObjects: true }) as Project[])\n          .filter((sideProject) => sideProject.isImportant)\n          .map((sideProject) => (\n            <ProjectCard key={sideProject.name} project={sideProject} />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default SideProjectSection;\n","const formatUrl = (url: string) => {\n  return url.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(/\\/$/, \"\");\n};\n\nexport default formatUrl;\n"],"names":["_ref","project","name","url","description","whatIDid","techStacks","startedAt","endedAt","_jsxs","className","twMerge","font","children","StylessA","href","_jsx","formatUrl","formatYearMonth","Date","_Fragment","ReactMarkdown","length","map","t","useTranslation","SectionTitle","returnObjects","filter","sideProject","isImportant","ProjectCard","replace"],"sourceRoot":""}