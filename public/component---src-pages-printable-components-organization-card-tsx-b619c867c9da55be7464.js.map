{"version":3,"file":"component---src-pages-printable-components-organization-card-tsx-b619c867c9da55be7464.js","mappings":"kKAMA,MAAMA,GAAOC,E,QAAAA,IAAOC,EAAAA,GAAK;;;;kCAISC,EAAAA;;;EAIlC,W,4HC0CA,UA1CyBC,IAA6C,IAA5C,aAAEC,GAAqCD,EAC/D,MAAM,KAAEE,EAAI,MAAEC,EAAK,IAAEC,EAAG,IAAEC,EAAG,UAAEC,EAAS,QAAEC,EAAO,SAAEC,GAAaP,GAC1D,KAAEQ,IAASC,EAAAA,EAAAA,KAEjB,OACEC,EAAAA,EAAAA,MAACf,EAAAA,QAAI,CAAAgB,SAAA,EACHD,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,cAAc,SACdC,MAAO,CACLC,WAAY,aAAab,GAAS,SAClCc,YAAa,QACbL,SAAA,EAEFM,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,KAAMhB,EAAIQ,UAClBD,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAAAD,SAAA,EACHM,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACZ,KAAMa,EAAAA,EAAKC,KAAMC,KAAMf,EAAK,GAAGG,SAClCV,IAGFE,IAAOc,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMG,UAAEa,EAAAA,EAAAA,GAAUrB,WAI/Cc,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMG,SAAEP,KAEzBM,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMG,SAAA,EACpBc,EAAAA,EAAAA,GAAgB,IAAIC,KAAKrB,IAAY,KAAG,IACxCC,GAAUmB,EAAAA,EAAAA,GAAgB,IAAIC,KAAKpB,IAAY,aAIpDW,EAAAA,EAAAA,KAACL,EAAAA,GAAI,CAACC,cAAc,SAASc,IAAK,OAAOhB,SACtCJ,EACEqB,QAAQC,GAAYA,EAAQC,cAC5BC,KAAKF,IACJZ,EAAAA,EAAAA,KAACe,EAAAA,QAAW,CAAoBH,QAASA,GAAvBA,EAAQ5B,YAG3B,C,4HCiBX,UAvDoBF,IAAmC,IAAlC,QAAE8B,GAA2B9B,EAChD,MAAM,KAAEE,EAAI,IAAEE,EAAG,YAAE8B,EAAW,SAAEC,EAAQ,WAAEC,EAAU,UAAE9B,EAAS,QAAEC,GAC/DuB,GACI,KAAErB,IAASC,EAAAA,EAAAA,MACA2B,EAAAA,EAAAA,KAEjB,OACE1B,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHC,cAAc,SACdC,MAAO,CACLuB,SAAU,WACV1B,SAAA,EAEFD,EAAAA,EAAAA,MAACQ,EAAAA,EAAQ,CAACC,KAAMhB,EAAIQ,SAAA,EAClBM,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACZ,KAAMa,EAAAA,EAAKiB,SAAUf,KAAMf,EAAK,GAAGG,SACtCV,IAGFE,IAAOc,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMG,UAAEa,EAAAA,EAAAA,GAAUrB,SAG7CO,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMG,SAAA,EACpBc,EAAAA,EAAAA,GAAgB,IAAIC,KAAKrB,IAAY,KAAG,IACxCC,GAAUmB,EAAAA,EAAAA,GAAgB,IAAIC,KAAKpB,IAAY,SAGjD2B,IACCvB,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAA5B,SAAA,EACEM,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CAACC,OAAQ,SAChBxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAa,CAAA/B,SAAEsB,OAInBC,GAAYA,EAASS,OAAS,IAC7BjC,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAA5B,SAAA,EACEM,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CAACC,OAAQ,SAEhBxB,EAAAA,EAAAA,KAAA,MACEH,MAAO,CACL8B,OAAQ,MACR5B,YAAa,QACbL,SAEDuB,EAASH,KAAKG,IACbjB,EAAAA,EAAAA,KAAA,MAAAN,UACEM,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMG,SAAEuB,KADlBA,YAOZ,C,yBCjENb,EAAI,SAAJA,GAAI,OAAJA,EAAI,sBAAJA,EAAI,4BAAJA,EAAI,uBAAJA,EAAI,yBAAJA,EAAI,wBAAJA,EAAI,0BAAJA,EAAI,sBAAJA,EAAI,2BAAJA,EAAI,uBAAJA,EAAI,gCAAJA,CAAI,EAAJA,GAAI,IAaT,K,qBCTA,IAJmBlB,GACVA,EAAI0C,QAAQ,WAAY,IAAIA,QAAQ,UAAW,IAAIA,QAAQ,MAAO,G","sources":["webpack://dohyun-ko.github.io/./src/pages/printable/components/Card.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/OrganizationCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/ProjectCard.tsx","webpack://dohyun-ko.github.io/./src/types/Font.ts","webpack://dohyun-ko.github.io/./src/utils/formatUrl.ts"],"sourcesContent":["import { MOBILE_MAX_WIDTH } from \"@/utils/const\";\nimport { Grid } from \"@dohyun-ko/react-atoms\";\nimport styled from \"styled-components\";\n\ninterface CardProps {}\n\nconst Card = styled(Grid)`\n  gap: 30px;\n  grid-template-columns: 160px 1fr;\n\n  @media screen and (max-width: ${MOBILE_MAX_WIDTH}px) {\n    grid-template-columns: 1fr;\n  }\n`;\nexport default Card;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport Organization from \"@/types/Organization\";\nimport { formatYearMonth } from \"@/utils/dateFormats\";\nimport formatUrl from \"@/utils/formatUrl\";\nimport { Flex, Text } from \"@dohyun-ko/react-atoms\";\nimport StylessA from \"../../../components/StylessA\";\nimport Card from \"./Card\";\nimport ProjectCard from \"./ProjectCard\";\n\ninterface OrganizationCardProps {\n  organization: Organization;\n}\n\nconst OrganizationCard = ({ organization }: OrganizationCardProps) => {\n  const { name, color, url, job, startedAt, endedAt, projects } = organization;\n  const { font } = useResponsiveFont();\n\n  return (\n    <Card>\n      <Flex\n        flexDirection=\"column\"\n        style={{\n          borderLeft: `5px solid ${color || \"gray\"}`,\n          paddingLeft: \"10px\",\n        }}\n      >\n        <StylessA href={url}>\n          <Flex>\n            <Text font={Font.Bold} size={font(1)}>\n              {name}\n            </Text>\n\n            {url && <Text size={font(0.75)}>{formatUrl(url)}</Text>}\n          </Flex>\n        </StylessA>\n\n        <Text size={font(0.75)}>{job}</Text>\n\n        <Text size={font(0.75)}>\n          {formatYearMonth(new Date(startedAt))} –{\" \"}\n          {endedAt ? formatYearMonth(new Date(endedAt)) : \"Now\"}\n        </Text>\n      </Flex>\n\n      <Flex flexDirection=\"column\" gap={\"20px\"}>\n        {projects\n          .filter((project) => project.isImportant)\n          .map((project) => (\n            <ProjectCard key={project.name} project={project} />\n          ))}\n      </Flex>\n    </Card>\n  );\n};\n\nexport default OrganizationCard;\n","import useIsMobile from \"@/hooks/useIsMobile\";\nimport useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport Project from \"@/types/Project\";\nimport { formatYearMonth } from \"@/utils/dateFormats\";\nimport formatUrl from \"@/utils/formatUrl\";\nimport { Flex, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport ReactMarkdown from \"react-markdown\";\nimport StylessA from \"../../../components/StylessA\";\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const { name, url, description, whatIDid, techStacks, startedAt, endedAt } =\n    project;\n  const { font } = useResponsiveFont();\n  const isMobile = useIsMobile();\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      style={{\n        fontSize: \"0.75rem\",\n      }}\n    >\n      <StylessA href={url}>\n        <Text font={Font.SemiBold} size={font(1)}>\n          {name}\n        </Text>\n\n        {url && <Text size={font(0.75)}>{formatUrl(url)}</Text>}\n      </StylessA>\n\n      <Text size={font(0.75)}>\n        {formatYearMonth(new Date(startedAt))} –{\" \"}\n        {endedAt ? formatYearMonth(new Date(endedAt)) : \"Now\"}\n      </Text>\n\n      {description && (\n        <>\n          <Spacer height={\"5px\"} />\n          <ReactMarkdown>{description}</ReactMarkdown>\n        </>\n      )}\n\n      {whatIDid && whatIDid.length > 0 && (\n        <>\n          <Spacer height={\"5px\"} />\n\n          <ul\n            style={{\n              margin: \"0px\",\n              paddingLeft: \"20px\",\n            }}\n          >\n            {whatIDid.map((whatIDid) => (\n              <li key={whatIDid}>\n                <Text size={font(0.75)}>{whatIDid}</Text>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default ProjectCard;\n","enum Font {\n  Thin = \"PretendardW100\",\n  ExtraLight = \"PretendardW200\",\n  Light = \"PretendardW300\",\n  Regular = \"PretendardW400\",\n  Medium = \"PretendardW500\",\n  SemiBold = \"PretendardW600\",\n  Bold = \"PretendardW700\",\n  ExtraBold = \"PretendardW800\",\n  Black = \"PretendardW900\",\n  SourceCodePro = \"Source Code Pro\",\n}\n\nexport default Font;\n","const formatUrl = (url: string) => {\n  return url.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(/\\/$/, \"\");\n};\n\nexport default formatUrl;\n"],"names":["Card","styled","Grid","MOBILE_MAX_WIDTH","_ref","organization","name","color","url","job","startedAt","endedAt","projects","font","useResponsiveFont","_jsxs","children","Flex","flexDirection","style","borderLeft","paddingLeft","_jsx","StylessA","href","Text","Font","Bold","size","formatUrl","formatYearMonth","Date","gap","filter","project","isImportant","map","ProjectCard","description","whatIDid","techStacks","useIsMobile","fontSize","SemiBold","_Fragment","Spacer","height","ReactMarkdown","length","margin","replace"],"sourceRoot":""}