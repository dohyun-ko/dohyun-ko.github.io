{"version":3,"file":"component---src-pages-resume-index-tsx-16c5046b7161ddd4d80a.js","mappings":"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","sources":["webpack://dohyun-ko.github.io/./src/components/resume/components/ProjectCard.tsx","webpack://dohyun-ko.github.io/./src/components/resume/components/SectionTitle.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/AwardSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/components/OrganizationCard.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/CurrentSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/EducationSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/ExperienceSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/MetaSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/components/PublicationCard.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/PublicationSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/SideProjectSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/SkillSection.tsx","webpack://dohyun-ko.github.io/./src/components/resume/sections/TitleSection.tsx","webpack://dohyun-ko.github.io/./src/pages/resume/index.tsx"],"sourcesContent":["import StylessA from '@/components/StylessA';\nimport Project from '@/types/Project';\nimport { formatYearMonth } from '@/utils/dateFormats';\nimport font from '@/utils/font';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport ReactMarkdown from 'react-markdown';\nimport { twMerge } from 'tailwind-merge';\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const { name, url, description, whatIDid, techStacks, startedAt, endedAt } =\n    project;\n  const { t } = useTranslation();\n\n  return (\n    <div className={'flex flex-col'}>\n      <StylessA href={url}>\n        <h3 className={twMerge('font-semibold', font(1.75))}>{name}</h3>\n      </StylessA>\n\n      <span>\n        {formatYearMonth(new Date(startedAt))} –{' '}\n        {endedAt ? formatYearMonth(new Date(endedAt)) : 'Now'}\n      </span>\n\n      <ReactMarkdown>{description}</ReactMarkdown>\n\n      {whatIDid && whatIDid.length > 0 && (\n        <ul className={'m-0 list-disc pl-5'}>\n          {whatIDid.map((whatIDid) => (\n            <li key={whatIDid}>\n              <p className={font(1)}>{whatIDid}</p>\n            </li>\n          ))}\n\n          {techStacks && techStacks.length > 0 && (\n            <li>\n              <p className={font(1)}>\n                {t('common.techStacks')}:{' '}\n                {techStacks.map((techStack) => techStack).join(', ')}\n              </p>\n            </li>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import font from '@/utils/font';\nimport { twMerge } from 'tailwind-merge';\n\ninterface SectionTitleProps {\n  children?: React.ReactNode;\n}\n\nconst SectionTitle = ({ children }: SectionTitleProps) => {\n  return <h1 className={twMerge('font-bold', font(2.5))}>{children}</h1>;\n};\n\nexport default SectionTitle;\n","import Project from '@/types/Project';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport ProjectCard from '../components/ProjectCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface AwardSection {}\n\nconst AwardSection = ({}: AwardSection) => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={'Area'} id=\"side-project-section\">\n      <div className={'Content'}>\n        <SectionTitle>Awards</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'flex flex-col gap-[30px]'}>\n          {(t('award.list', { returnObjects: true }) as Project[]).map(\n            (award) => (\n              <ProjectCard key={award.name} project={award} />\n            ),\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default AwardSection;\n","import StylessA from '@/components/StylessA';\nimport Organization from '@/types/Organization';\nimport { formatYearMonth } from '@/utils/dateFormats';\nimport font from '@/utils/font';\nimport { twMerge } from 'tailwind-merge';\nimport ProjectCard from './ProjectCard';\n\ninterface OrganizationCardProps {\n  organization: Organization;\n}\n\nconst OrganizationCard = ({ organization }: OrganizationCardProps) => {\n  const { name, color, url, job, startedAt, endedAt } = organization;\n\n  return (\n    <div className={'Card'}>\n      <div\n        className={twMerge(\n          'flex flex-col border-l-[5px] border-solid pl-2.5',\n          color ? `border-[${color}]` : 'border-gray-400',\n        )}\n      >\n        <StylessA href={url}>\n          <h2 className={twMerge('font-bold', font(2))}>{name}</h2>\n        </StylessA>\n\n        <span>{job}</span>\n\n        <span>\n          {formatYearMonth(new Date(startedAt))} –{' '}\n          {endedAt ? formatYearMonth(new Date(endedAt)) : 'Now'}\n        </span>\n      </div>\n\n      <div className={'flex flex-col gap-5'}>\n        {organization.projects.map((project) => (\n          <ProjectCard key={project.name} project={project} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default OrganizationCard;\n","import Organization from '@/types/Organization';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport OrganizationCard from '../components/OrganizationCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface CurrentPageProps {}\n\nconst CurrentSection = ({}: CurrentPageProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={'Area'} id=\"current-section\">\n      <div className={'Content'}>\n        <SectionTitle>Currently working in</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'flex flex-col gap-[35px]'}>\n          {(\n            t('current', { returnObjects: true }) as {\n              organizations: Organization[];\n            }\n          ).organizations.map((organization) => (\n            <OrganizationCard\n              key={organization.name}\n              organization={organization}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CurrentSection;\n","import font from '@/utils/font';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport React from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface EducationSectionProps {}\n\nconst EducationSection = ({}: EducationSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={'Area'} id=\"education-section\">\n      <div className={'Content'}>\n        <SectionTitle>Educations</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'Card'}>\n          <div\n            className={'flex gap-5 border-l-[5px] border-[#EB0D00] pl-[10px]'}\n          >\n            <div className={'flex flex-col gap-[30px]'}>\n              <div className={'flex flex-col'}>\n                <h2 className={twMerge('font-bold', `text-[${font(2)}]`)}>\n                  GIST\n                </h2>\n                <span>{t('education.major')}</span>\n                <span>2022. 2 – </span>\n              </div>\n            </div>\n\n            <span>TGPA 4.04 / 4.5</span>\n          </div>\n\n          <div className={'flex w-full flex-col gap-[10px]'}>\n            <span className={'text-[1.125rem] font-bold'}>\n              {t('education.attendedLecture')}\n            </span>\n\n            <div className={'flex-wrap gap-[0_10px]'}>\n              <p>\n                {(\n                  t('education.attendedLectures', {\n                    returnObjects: true,\n                  }) as string[]\n                ).map((item, index, array) => (\n                  <React.Fragment key={item}>\n                    {index < array.length - 1\n                      ? [item, <span style={{ padding: '0 6px' }}>|</span>]\n                      : item}\n                  </React.Fragment>\n                ))}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default EducationSection;\n","import Organization from '@/types/Organization';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport OrganizationCard from '../components/OrganizationCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface ExperienceSectionProps {}\n\nconst ExperienceSection = ({}: ExperienceSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={'Area'} id=\"experience-section\">\n      <div className={'Content'}>\n        <SectionTitle>Experiences</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'flex flex-col gap-[30px]'}>\n          {(\n            t('experience.experiences', {\n              returnObjects: true,\n            }) as Organization[]\n          ).map((experience) => (\n            <OrganizationCard key={experience.name} organization={experience} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ExperienceSection;\n","interface MetaSectionProps {}\n\nconst MetaSection = ({}: MetaSectionProps) => {\n  return (\n    <section className={'Area'} id=\"meta-section\">\n      <div className={'Content'}>\n        <div className={'flex'}>\n          <p className={'text-[1.25rem] font-thin'}>Last update: 2024-09-22</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default MetaSection;\n","import StylessA from '@/components/StylessA';\nimport Publication from '@/types/Publication';\nimport { formatYearMonth } from '@/utils/dateFormats';\nimport font from '@/utils/font';\nimport ReactMarkdown from 'react-markdown';\nimport { twMerge } from 'tailwind-merge';\n\ninterface PublicationCardProps {\n  publication: Publication;\n}\n\nconst PublicationCard = ({ publication }: PublicationCardProps) => {\n  const { name, date, url, description, publisher } = publication;\n\n  return (\n    <div className={'flex flex-col'}>\n      <StylessA href={url}>\n        <h3 className={twMerge('font-semibold', font(1.5))}>{name}</h3>\n      </StylessA>\n\n      <span>\n        {publisher} - {formatYearMonth(new Date(date))}\n      </span>\n\n      <ReactMarkdown>{description}</ReactMarkdown>\n    </div>\n  );\n};\n\nexport default PublicationCard;\n","import Publication from '@/types/Publication';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport PublicationCard from '../components/PublicationCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface PublicationSectionProps {}\n\nconst PublicationSection = ({}: PublicationSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={'Area'} id=\"side-project-section\">\n      <div className={'Content'}>\n        <SectionTitle>Publications</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'flex flex-col gap-[30px]'}>\n          {(\n            t('publication.publications', {\n              returnObjects: true,\n            }) as Publication[]\n          ).map((publication) => (\n            <PublicationCard key={publication.name} publication={publication} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PublicationSection;\n","import Project from '@/types/Project';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport ProjectCard from '../components/ProjectCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface SideProjectSectionProps {}\n\nconst SideProjectSection = ({}: SideProjectSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={'Area'} id=\"side-project-section\">\n      <div className={'Content'}>\n        <SectionTitle>Side Projects</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'flex flex-col gap-[30px]'}>\n          {(\n            t('sideProject.sideProjects', { returnObjects: true }) as Project[]\n          ).map((sideProject) => (\n            <ProjectCard key={sideProject.name} project={sideProject} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SideProjectSection;\n","import SectionTitle from '../components/SectionTitle';\n\nconst mapFont = (level: number) => {\n  switch (level) {\n    case 1:\n      return 'font-thin';\n    case 2:\n      return 'font-light';\n    case 3:\n      return 'font-medium';\n    case 4:\n      return 'font-bold';\n    case 5:\n      return 'font-black';\n    default:\n      return 'font-normal';\n  }\n};\n\ninterface SkillSectionProps {}\n\nconst skills = [\n  {\n    name: 'React',\n    level: 5,\n  },\n  {\n    name: 'TypeScript',\n    level: 4,\n  },\n  {\n    name: 'Next.js',\n    level: 3,\n  },\n  {\n    name: 'Python',\n    level: 3,\n  },\n  {\n    name: 'NestJS',\n    level: 2,\n  },\n  {\n    name: 'FastAPI',\n    level: 2,\n  },\n  {\n    name: 'Flutter',\n    level: 2,\n  },\n  {\n    name: 'C++',\n    level: 2,\n  },\n  {\n    name: 'Kotlin',\n    level: 1,\n  },\n  {\n    name: 'Docker',\n    level: 1,\n  },\n  {\n    name: 'Rust',\n    level: 1,\n  },\n  {\n    name: 'Assembly',\n    level: 1,\n  },\n];\n\nconst SkillSection = ({}: SkillSectionProps) => {\n  return (\n    <section className={'Area'} id=\"skill-section\">\n      <div className={'Content'}>\n        <SectionTitle>Skills</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'grid grid-cols-3 gap-[10px]'}>\n          {skills.map((skill) => (\n            <span className={mapFont(skill.level)} key={skill.name}>\n              {skill.name}\n            </span>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SkillSection;\n","import StylessA from '@/components/StylessA';\nimport font from '@/utils/font';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport { twMerge } from 'tailwind-merge';\n\ninterface TitleSectionProps {}\n\nconst TitleSection = ({}: TitleSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={'Area'} id=\"title-section\">\n      <div className={'Content'}>\n        <h1 className={twMerge('font-thin', font(2))}>\n          {t('title.developer')}\n        </h1>\n        <h1 className={twMerge('font-bold', font(3.5))}>{t('title.name')}</h1>\n\n        <p className={twMerge('font-medium', font(1.5))}>{t('introduction')}</p>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'flex'}>\n          <p className={font(1.5)}>\n            <StylessA href=\"mailto:dohyun682@gmail.com\" hasIcon={false}>\n              dohyun682@gmail.com\n            </StylessA>{' '}\n            |{' '}\n            <StylessA href=\"https://github.com/dohyun-ko\" hasIcon={false}>\n              GitHub\n            </StylessA>{' '}\n            |{' '}\n            <StylessA\n              href=\"https://www.instagram.com/dohyun682\"\n              hasIcon={false}\n            >\n              Instagram\n            </StylessA>{' '}\n            |{' '}\n            <StylessA\n              href=\"https://www.linkedin.com/in/dohyun-ko-92b885212\"\n              hasIcon={false}\n            >\n              LinkedIn\n            </StylessA>\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TitleSection;\n","import AwardSection from '@/components/resume/sections/AwardSection';\nimport CurrentSection from '@/components/resume/sections/CurrentSection';\nimport EducationSection from '@/components/resume/sections/EducationSection';\nimport ExperienceSection from '@/components/resume/sections/ExperienceSection';\nimport MetaSection from '@/components/resume/sections/MetaSection';\nimport PublicationSection from '@/components/resume/sections/PublicationSection';\nimport SideProjectSection from '@/components/resume/sections/SideProjectSection';\nimport SkillSection from '@/components/resume/sections/SkillSection';\nimport TitleSection from '@/components/resume/sections/TitleSection';\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\ninterface ResumePageProps {}\n\nconst ResumePage = ({}: ResumePageProps) => {\n  return (\n    <React.Fragment>\n      <div className={'h-[50px]'} />\n\n      <MetaSection />\n\n      <div className={'h-[50px]'} />\n\n      <TitleSection />\n\n      <div className={'h-[50px]'} />\n\n      <SkillSection />\n\n      <div className={'h-[50px]'} />\n\n      <EducationSection />\n\n      <div className={'h-[50px]'} />\n\n      <PublicationSection />\n\n      <div className={'h-[50px]'} />\n\n      <CurrentSection />\n\n      <div className={'h-[50px]'} />\n\n      <ExperienceSection />\n\n      <div className={'h-[50px]'} />\n\n      <SideProjectSection />\n\n      <div className={'h-[50px]'} />\n\n      <AwardSection />\n\n      <div className={'h-[150px]'} />\n    </React.Fragment>\n  );\n};\n\nexport default ResumePage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","project","name","url","description","whatIDid","techStacks","startedAt","endedAt","t","useTranslation","_jsxs","className","children","_jsx","StylessA","href","twMerge","font","formatYearMonth","Date","ReactMarkdown","length","map","techStack","join","id","SectionTitle","returnObjects","award","ProjectCard","organization","color","job","projects","organizations","OrganizationCard","item","index","array","React","style","padding","experience","publication","date","publisher","PublicationCard","sideProject","mapFont","level","skills","skill","hasIcon","MetaSection","TitleSection","SkillSection","EducationSection","PublicationSection","CurrentSection","ExperienceSection","SideProjectSection","AwardSection"],"sourceRoot":""}