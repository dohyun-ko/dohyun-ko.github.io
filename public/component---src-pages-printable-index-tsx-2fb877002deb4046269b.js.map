{"version":3,"file":"component---src-pages-printable-index-tsx-2fb877002deb4046269b.js","mappings":"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","sources":["webpack://dohyun-ko.github.io/./src/pages/printable/components/OrganizationCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/ProjectCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/PublicationCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/printable.module.css","webpack://dohyun-ko.github.io/./src/pages/printable/index.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/AwardsSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/ExperienceSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/PublicationSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/SideProjectSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/SkillSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/skillSection.module.css","webpack://dohyun-ko.github.io/./src/pages/printable/sections/TitleSection.tsx","webpack://dohyun-ko.github.io/./src/utils/formatUrl.ts"],"sourcesContent":["import Organization from '@/types/Organization';\nimport { formatYearMonth } from '@/utils/dateFormats';\nimport font from '@/utils/font';\nimport formatUrl from '@/utils/formatUrl';\nimport { twMerge } from 'tailwind-merge';\nimport StylessA from '../../../components/StylessA';\nimport ProjectCard from './ProjectCard';\n\ninterface OrganizationCardProps {\n  organization: Organization;\n}\n\nconst OrganizationCard = ({ organization }: OrganizationCardProps) => {\n  const { name, color, url, job, startedAt, endedAt, projects } = organization;\n\n  return (\n    <div className={'PrintableCard'}>\n      <div\n        className={twMerge(\n          'flex flex-col border-l-[5px] border-solid pl-2.5',\n          color ? `border-[${color}]` : 'border-gray-400',\n        )}\n      >\n        <StylessA href={url}>\n          <div className={'flex flex-wrap'}>\n            <h3 className={twMerge('font-bold', font(1))}>{name}</h3>\n\n            {url && <span className={font(0.75)}>{formatUrl(url)}</span>}\n          </div>\n        </StylessA>\n\n        <span className={font(0.75)}>{job}</span>\n\n        <span className={font(0.75)}>\n          {formatYearMonth(new Date(startedAt))} –{' '}\n          {endedAt ? formatYearMonth(new Date(endedAt)) : 'Now'}\n        </span>\n      </div>\n\n      <div className={'flex flex-col gap-5'}>\n        {projects\n          .filter((project) => project.isImportant)\n          .map((project) => (\n            <ProjectCard key={project.name} project={project} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default OrganizationCard;\n","import Project from '@/types/Project';\nimport { formatYearMonth } from '@/utils/dateFormats';\nimport font from '@/utils/font';\nimport formatUrl from '@/utils/formatUrl';\nimport ReactMarkdown from 'react-markdown';\nimport { twMerge } from 'tailwind-merge';\nimport StylessA from '../../../components/StylessA';\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const { name, url, description, whatIDid, techStacks, startedAt, endedAt } =\n    project;\n\n  return (\n    <div className={twMerge('flex-col', font(0.75))}>\n      <StylessA href={url}>\n        <h3 className={twMerge('font-semibold', font(1))}>{name}</h3>\n\n        {url && <span className={font(0.75)}>{formatUrl(url)}</span>}\n      </StylessA>\n\n      <span className={font(0.75)}>\n        {formatYearMonth(new Date(startedAt))} –{' '}\n        {endedAt ? formatYearMonth(new Date(endedAt)) : 'Now'}\n      </span>\n\n      {description && (\n        <>\n          <div className={'h-[5px]'} />\n          <ReactMarkdown>{description}</ReactMarkdown>\n        </>\n      )}\n\n      {whatIDid && whatIDid.length > 0 && (\n        <>\n          <div className={'h-[5px]'} />\n\n          <ul className={'m-0 list-disc pl-5'}>\n            {whatIDid.map((whatIDid) => (\n              <li key={whatIDid}>\n                <p className={font(0.75)}>{whatIDid}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import Publication from '@/types/Publication';\nimport { formatYearMonth } from '@/utils/dateFormats';\nimport font from '@/utils/font';\nimport ReactMarkdown from 'react-markdown';\nimport { twMerge } from 'tailwind-merge';\nimport StylessA from '../../../components/StylessA';\n\ninterface PublicationCardProps {\n  publication: Publication;\n}\n\nconst PublicationCard = ({ publication }: PublicationCardProps) => {\n  const { name, date, url, description, publisher } = publication;\n\n  return (\n    <div className={twMerge('flex flex-col', font(0.75))}>\n      <StylessA href={url}>\n        <h3 className={twMerge('font-semibold', font(1))}>{name}</h3>\n      </StylessA>\n\n      <span className={font(0.75)}>\n        {publisher} - {formatYearMonth(new Date(date))}\n      </span>\n\n      <ReactMarkdown>{description}</ReactMarkdown>\n    </div>\n  );\n};\n\nexport default PublicationCard;\n","// extracted by mini-css-extract-plugin\nexport var pretendard = \"printable-module--pretendard--c5398\";","import { graphql } from 'gatsby';\nimport { twMerge } from 'tailwind-merge';\nimport * as styles from './printable.module.css';\nimport AwardSection from './sections/AwardsSection';\nimport EducationSection from './sections/EducationSection';\nimport ExperienceSection from './sections/ExperienceSection';\nimport PublicationSection from './sections/PublicationSection';\nimport SideProjectSection from './sections/SideProjectSection';\nimport SkillSection from './sections/SkillSection';\nimport TitleSection from './sections/TitleSection';\n\nconst PrintablePage = () => {\n  console.log(styles);\n\n  return (\n    <div className={twMerge('Area', styles.pretendard)}>\n      <div className={'Content w-[92%]'}>\n        <TitleSection />\n\n        <div className={'h-[20px]'} />\n\n        <SkillSection />\n\n        <div className={'h-[30px]'} />\n\n        <ExperienceSection />\n\n        <div className={'h-[30px]'} />\n\n        <EducationSection />\n\n        <div className={'h-[30px]'} />\n\n        <PublicationSection />\n\n        <div className={'h-[20px]'} />\n\n        <SideProjectSection />\n\n        <div className={'h-[20px]'} />\n\n        <AwardSection />\n      </div>\n    </div>\n  );\n};\n\nexport default PrintablePage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","import Project from '@/types/Project';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport ProjectCard from '../components/ProjectCard';\nimport SectionTitle from '../components/SectionTitle';\ninterface AwardSection {}\n\nconst AwardSection = ({}: AwardSection) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Awards</SectionTitle>\n\n      <div className={'h-[10px]'} />\n\n      <div className={'flex flex-col'}>\n        {(t('award.list', { returnObjects: true }) as Project[])\n          .filter((award) => award.isImportant)\n          .map((award) => (\n            <ProjectCard key={award.name} project={award} />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default AwardSection;\n","import Organization from '@/types/Organization';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport OrganizationCard from '../components/OrganizationCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface ExperienceSectionProps {}\n\nconst ExperienceSection = ({}: ExperienceSectionProps) => {\n  const { t } = useTranslation();\n\n  const organizations = [\n    ...(\n      t('experience.experiences', {\n        returnObjects: true,\n      }) as Organization[]\n    ).reverse(),\n    ...(t('current.organizations', {\n      returnObjects: true,\n    }) as Organization[]),\n  ].filter((experience) => experience.isImportant);\n\n  return (\n    <>\n      <SectionTitle>경력</SectionTitle>\n\n      <div className={'h-2.5'} />\n\n      <div className={'flex flex-col gap-5'}>\n        {organizations.map((experience) => (\n          <OrganizationCard key={experience.name} organization={experience} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default ExperienceSection;\n","import Publication from '@/types/Publication';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport PublicationCard from '../components/PublicationCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface PublicationSectionProps {}\n\nconst PublicationSection = ({}: PublicationSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Publications</SectionTitle>\n\n      <div className={'h-[5px]'} />\n\n      <div className={'flex flex-col gap-5'}>\n        {(\n          t('publication.publications', {\n            returnObjects: true,\n          }) as Publication[]\n        ).map((publication) => (\n          <PublicationCard key={publication.name} publication={publication} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default PublicationSection;\n","import Project from '@/types/Project';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport ProjectCard from '../components/ProjectCard';\nimport SectionTitle from '../components/SectionTitle';\n\ninterface SideProjectSectionProps {}\n\nconst SideProjectSection = ({}: SideProjectSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Side Projects</SectionTitle>\n\n      <div className={'h-2.5'} />\n\n      <div className={'flex flex-col gap-[15px]'}>\n        {(t('sideProject.sideProjects', { returnObjects: true }) as Project[])\n          .filter((sideProject) => sideProject.isImportant)\n          .map((sideProject) => (\n            <ProjectCard key={sideProject.name} project={sideProject} />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default SideProjectSection;\n","import { useTranslation } from 'gatsby-plugin-react-i18next';\nimport { twMerge } from 'tailwind-merge';\nimport SectionTitle from '../components/SectionTitle';\nimport * as styles from './skillSection.module.css';\n\ninterface SkillSectionProps {}\n\nconst SkillSection = ({}: SkillSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className={'flex'}>\n        <SectionTitle>보유기술</SectionTitle>\n      </div>\n\n      <div className={'h-2.5'} />\n\n      <p className={twMerge('grid grid-cols-[70px_1fr]', styles.sourceCode)}>\n        <span>{t('common.advanced')}:</span>\n\n        <span className={'source-code-pro'}>\n          React&nbsp; TypeScript&nbsp; Next.js\n        </span>\n\n        <span>{t('common.proficient')}:</span>\n\n        <span className={'source-code-pro'}>\n          Python&nbsp; NestJS&nbsp; FastAPI&nbsp; Flutter\n        </span>\n      </p>\n    </>\n  );\n};\n\nexport default SkillSection;\n","// extracted by mini-css-extract-plugin\nexport var sourceCode = \"skillSection-module--sourceCode--afd53\";","import font from '@/utils/font';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\nimport { twMerge } from 'tailwind-merge';\nimport StylessA from '../../../components/StylessA';\n\ninterface TitleSectionProps {}\n\nconst TitleSection = ({}: TitleSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <h1 className={twMerge('font-bold', font(2))}>{t('title.name')}</h1>\n\n      <p className={twMerge('font-medium', font(0.75))}>{t('introduction')}</p>\n\n      <div className={'h-2.5'} />\n\n      <div className={'flex'}>\n        <p className={font(0.875)}>\n          <StylessA href=\"mailto:dohyun682@gmail.com\" hasIcon={false}>\n            dohyun682@gmail.com\n          </StylessA>{' '}\n          | 010-3351-0168 |{' '}\n          <StylessA href=\"https://github.com/dohyun-ko\" hasIcon={false}>\n            github.com/dohyun-ko\n          </StylessA>{' '}\n          <br />\n          Detailed Resume:{' '}\n          <StylessA href=\"https://dohyun.is-a.dev/resume\" hasIcon={false}>\n            dohyun.is-a.dev\n          </StylessA>\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default TitleSection;\n","const formatUrl = (url: string) => {\n  return url.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(/\\/$/, \"\");\n};\n\nexport default formatUrl;\n"],"names":["_ref","organization","name","color","url","job","startedAt","endedAt","projects","_jsxs","className","children","twMerge","_jsx","StylessA","href","font","formatUrl","formatYearMonth","Date","filter","project","isImportant","map","ProjectCard","description","whatIDid","techStacks","_Fragment","ReactMarkdown","length","publication","date","publisher","pretendard","PrintablePage","console","log","styles","TitleSection","SkillSection","ExperienceSection","EducationSection","PublicationSection","SideProjectSection","AwardSection","t","useTranslation","SectionTitle","returnObjects","award","organizations","concat","_toConsumableArray","reverse","experience","OrganizationCard","PublicationCard","sideProject","hasIcon","replace"],"sourceRoot":""}