{"version":3,"file":"component---src-pages-printable-sections-education-section-tsx-0d14ffa1bd3b8bd558ac.js","mappings":"6LAaO,MAAMA,GAAgBC,EAAAA,EAAAA,eAAiC,CAC5DC,YAAa,IA6Bf,I,UCjCA,MANoBC,KACHC,EAAAA,EAAAA,YAAWJ,GAEZE,YAAcG,EAAAA,C,qCCgB9B,IArB0BC,KACxB,MAAMC,GAAWJ,EAAAA,EAAAA,KAiBjB,MAAO,CAAEK,KAfKC,GAYL,UAXUF,EAIJ,MADCE,EAEG,MAEAC,KAAKC,MAAa,GAAPF,EAAa,IAAM,GAN3CA,GAUoBG,iBAGX,C,sDCdjB,MAAMC,GAAOC,E,QAAAA,IAAOC,EAAAA,GAAK;;;;kCAISV,EAAAA;;;EAIlC,W,0ECIA,UAVqBW,IAAqC,IAApC,SAAEC,GAA6BD,EACnD,MAAM,KAAER,IAASF,EAAAA,EAAAA,KAEjB,OACEY,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,KAAKZ,KAAMa,EAAAA,EAAKC,KAAMb,KAAMD,EAAK,MAAMS,SAC7CA,GACI,C,wGCqDX,UA1DyBD,IAA+B,MAALA,EACjD,MAAM,EAAEO,IAAMC,EAAAA,EAAAA,mBACR,KAAEhB,IAASF,EAAAA,EAAAA,KAEjB,OACEmB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAT,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAAA,QAAY,CAAAV,SAAC,QAEdC,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAACC,OAAQ,UAEhBJ,EAAAA,EAAAA,MAACZ,EAAAA,QAAI,CAAAI,SAAA,EACHC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CACHC,IAAK,OACLC,MAAO,CACLC,WAAY,oBACZC,YAAa,QACbjB,UAEFC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACK,cAAe,SAAUJ,IAAK,OAAOd,UACzCQ,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACK,cAAe,SAASlB,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACX,KAAMa,EAAAA,EAAKC,KAAMb,KAAMD,EAAK,GAAGS,SAAC,UAGtCC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACV,KAAM,OAAOQ,SAAEM,EAAE,6BAI7BE,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACK,cAAe,SAASlB,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACV,KAAMD,EAAK,GAAGS,SAAC,qBACrBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACV,KAAMD,EAAK,KAAMS,SAAC,uBAyB3B,C,yBC/DFI,EAAI,SAAJA,GAAI,OAAJA,EAAI,sBAAJA,EAAI,4BAAJA,EAAI,uBAAJA,EAAI,yBAAJA,EAAI,wBAAJA,EAAI,0BAAJA,EAAI,sBAAJA,EAAI,2BAAJA,EAAI,uBAAJA,EAAI,gCAAJA,CAAI,EAAJA,GAAI,IAaT,K,uDCbO,MAAMhB,EAAmB,G","sources":["webpack://dohyun-ko.github.io/./src/App.tsx","webpack://dohyun-ko.github.io/./src/hooks/useIsMobile.tsx","webpack://dohyun-ko.github.io/./src/hooks/useResponsiveFont.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/Card.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/SectionTitle.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/EducationSection.tsx","webpack://dohyun-ko.github.io/./src/types/Font.ts","webpack://dohyun-ko.github.io/./src/utils/const.ts"],"sourcesContent":["import { createContext, useLayoutEffect, useState } from \"react\";\nimport { BrowserRouter, Routes } from \"react-router-dom\";\n\nexport enum RoutePath {\n  HOME = \"/\",\n  RESUME = \"/resume\",\n  PRINTABLE = \"/printable\",\n}\n\ntype LayoutContextType = {\n  windowWidth: number;\n};\n\nexport const LayoutContext = createContext<LayoutContextType>({\n  windowWidth: 0,\n});\n\nfunction App() {\n  const [windowWidth, setWindowWidth] = useState(0);\n\n  useLayoutEffect(() => {\n    const updateWidth = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        windowWidth,\n      }}\n    >\n      <BrowserRouter>\n        <Routes></Routes>\n      </BrowserRouter>\n    </LayoutContext.Provider>\n  );\n}\n\nexport default App;\n","import { LayoutContext } from \"@/App\";\nimport { MOBILE_MAX_WIDTH } from \"@/utils/const\";\nimport { useContext } from \"react\";\n\nconst useIsMobile = () => {\n  const layout = useContext(LayoutContext);\n\n  return layout.windowWidth < MOBILE_MAX_WIDTH;\n};\n\nexport default useIsMobile;\n","import useIsMobile from './useIsMobile';\n\nconst useResponsiveFont = () => {\n  const isMobile = useIsMobile();\n\n  const font = (size: number) => {\n    const resized = !isMobile\n      ? size\n      : (() => {\n          switch (size) {\n            case 3.5:\n              return 2.375;\n            default:\n              return Math.round(size * 0.8 * 16) / 16;\n          }\n        })();\n\n    return `text-[${resized.toString()}rem]`;\n  };\n\n  return { font };\n};\n\nexport default useResponsiveFont;\n","import { MOBILE_MAX_WIDTH } from \"@/utils/const\";\nimport { Grid } from \"@dohyun-ko/react-atoms\";\nimport styled from \"styled-components\";\n\ninterface CardProps {}\n\nconst Card = styled(Grid)`\n  gap: 30px;\n  grid-template-columns: 160px 1fr;\n\n  @media screen and (max-width: ${MOBILE_MAX_WIDTH}px) {\n    grid-template-columns: 1fr;\n  }\n`;\nexport default Card;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport { Text } from \"@dohyun-ko/react-atoms\";\n\ninterface SectionTitleProps {\n  children?: React.ReactNode;\n}\n\nconst SectionTitle = ({ children }: SectionTitleProps) => {\n  const { font } = useResponsiveFont();\n\n  return (\n    <Text as=\"h1\" font={Font.Bold} size={font(1.25)}>\n      {children}\n    </Text>\n  );\n};\n\nexport default SectionTitle;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport { Flex, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport Card from \"../components/Card\";\nimport SectionTitle from \"../components/SectionTitle\";\n\ninterface EducationSectionProps {}\n\nconst EducationSection = ({}: EducationSectionProps) => {\n  const { t } = useTranslation();\n  const { font } = useResponsiveFont();\n\n  return (\n    <>\n      <SectionTitle>학력</SectionTitle>\n\n      <Spacer height={\"10px\"} />\n\n      <Card>\n        <Flex\n          gap={\"20px\"}\n          style={{\n            borderLeft: `5px solid #EB0D00`,\n            paddingLeft: \"10px\",\n          }}\n        >\n          <Flex flexDirection={\"column\"} gap={\"30px\"}>\n            <Flex flexDirection={\"column\"}>\n              <Text font={Font.Bold} size={font(1)}>\n                GIST\n              </Text>\n              <Text size={\"1rem\"}>{t(\"education.major\")}</Text>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex flexDirection={\"column\"}>\n          <Text size={font(1)}>TGPA 4.04 / 4.5</Text>\n          <Text size={font(0.75)}>2022. 2 – </Text>\n        </Flex>\n\n        {/* <Flex flexDirection={\"column\"} width={\"100%\"} gap={\"10px\"}>\n          <Text size={font(0.75)} weight={\"bold\"}>\n            {t(\"education.attendedLecture\")}\n          </Text>\n\n          <Flex gap={\"0 10px\"} wrap={\"wrap\"}>\n            <Text size={font(0.75)}>\n              {(\n                t(\"education.attendedLectures\", {\n                  returnObjects: true,\n                }) as string[]\n              ).map((item, index, array) => (\n                <span key={item}>\n                  {index < array.length - 1\n                    ? [item, <span style={{ padding: \"0 6px\" }}>|</span>]\n                    : item}\n                </span>\n              ))}\n            </Text>\n          </Flex>\n        </Flex> */}\n      </Card>\n    </>\n  );\n};\n\nexport default EducationSection;\n","enum Font {\n  Thin = \"PretendardW100\",\n  ExtraLight = \"PretendardW200\",\n  Light = \"PretendardW300\",\n  Regular = \"PretendardW400\",\n  Medium = \"PretendardW500\",\n  SemiBold = \"PretendardW600\",\n  Bold = \"PretendardW700\",\n  ExtraBold = \"PretendardW800\",\n  Black = \"PretendardW900\",\n  SourceCodePro = \"Source Code Pro\",\n}\n\nexport default Font;\n","export const MOBILE_MAX_WIDTH = 768;\n"],"names":["LayoutContext","createContext","windowWidth","useIsMobile","useContext","MOBILE_MAX_WIDTH","useResponsiveFont","isMobile","font","size","Math","round","toString","Card","styled","Grid","_ref","children","_jsx","Text","as","Font","Bold","t","useTranslation","_jsxs","_Fragment","SectionTitle","Spacer","height","Flex","gap","style","borderLeft","paddingLeft","flexDirection"],"sourceRoot":""}