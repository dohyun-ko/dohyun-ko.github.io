{"version":3,"file":"component---src-pages-printable-sections-side-project-section-tsx-b32274ff12e02f85a52c.js","mappings":"uOAqEA,UAvDoBA,IAAmC,IAAlC,QAAEC,GAA2BD,EAChD,MAAM,KAAEE,EAAI,IAAEC,EAAG,YAAEC,EAAW,SAAEC,EAAQ,WAAEC,EAAU,UAAEC,EAAS,QAAEC,GAC/DP,GACI,KAAEQ,IAASC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KAEjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,cAAc,SACdC,MAAO,CACLC,SAAU,WACVC,SAAA,EAEFL,EAAAA,EAAAA,MAACM,EAAAA,EAAQ,CAACC,KAAMhB,EAAIc,SAAA,EAClBG,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACZ,KAAMa,EAAAA,EAAKC,SAAUC,KAAMf,EAAK,GAAGQ,SACtCf,IAGFC,IAAOiB,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMQ,UAAEQ,EAAAA,EAAAA,GAAUtB,SAG7CS,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMQ,SAAA,EACpBS,EAAAA,EAAAA,GAAgB,IAAIC,KAAKpB,IAAY,KAAG,IACxCC,GAAUkB,EAAAA,EAAAA,GAAgB,IAAIC,KAAKnB,IAAY,SAGjDJ,IACCQ,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAX,SAAA,EACEG,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAACC,OAAQ,SAChBV,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAAAd,SAAEb,OAInBC,GAAYA,EAAS2B,OAAS,IAC7BpB,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAX,SAAA,EACEG,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAACC,OAAQ,SAEhBV,EAAAA,EAAAA,KAAA,MACEL,MAAO,CACLkB,OAAQ,MACRC,YAAa,QACbjB,SAEDZ,EAAS8B,KAAK9B,IACbe,EAAAA,EAAAA,KAAA,MAAAH,UACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACG,KAAMf,EAAK,KAAMQ,SAAEZ,KADlBA,YAOZ,C,0EC/CX,UAVqBL,IAAqC,IAApC,SAAEiB,GAA6BjB,EACnD,MAAM,KAAES,IAASC,EAAAA,EAAAA,KAEjB,OACEU,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACe,GAAG,KAAK3B,KAAMa,EAAAA,EAAKe,KAAMb,KAAMf,EAAK,MAAMQ,SAC7CA,GACI,C,oFCcX,UApB2BjB,IAAiC,MAALA,EACrD,MAAM,EAAEsC,IAAMC,EAAAA,EAAAA,kBAEd,OACE3B,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAX,SAAA,EACEG,EAAAA,EAAAA,KAACoB,EAAAA,QAAY,CAAAvB,SAAC,mBAEdG,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAACC,OAAQ,UAEhBV,EAAAA,EAAAA,KAACP,EAAAA,GAAI,CAACC,cAAe,SAAU2B,IAAK,OAAOxB,SACvCqB,EAAE,2BAA4B,CAAEI,eAAe,IAC9CC,QAAQC,GAAgBA,EAAYC,cACpCV,KAAKS,IACJxB,EAAAA,EAAAA,KAAC0B,EAAAA,QAAW,CAAwB7C,QAAS2C,GAA3BA,EAAY1C,YAGnC,C,yBCxBFoB,EAAI,SAAJA,GAAI,OAAJA,EAAI,sBAAJA,EAAI,4BAAJA,EAAI,uBAAJA,EAAI,yBAAJA,EAAI,wBAAJA,EAAI,0BAAJA,EAAI,sBAAJA,EAAI,2BAAJA,EAAI,uBAAJA,EAAI,gCAAJA,CAAI,EAAJA,GAAI,IAaT,K,qBCTA,IAJmBnB,GACVA,EAAI4C,QAAQ,WAAY,IAAIA,QAAQ,UAAW,IAAIA,QAAQ,MAAO,G","sources":["webpack://dohyun-ko.github.io/./src/pages/printable/components/ProjectCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/SectionTitle.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/SideProjectSection.tsx","webpack://dohyun-ko.github.io/./src/types/Font.ts","webpack://dohyun-ko.github.io/./src/utils/formatUrl.ts"],"sourcesContent":["import useIsMobile from \"@/hooks/useIsMobile\";\nimport useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport Project from \"@/types/Project\";\nimport { formatYearMonth } from \"@/utils/dateFormats\";\nimport formatUrl from \"@/utils/formatUrl\";\nimport { Flex, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport ReactMarkdown from \"react-markdown\";\nimport StylessA from \"../../../components/StylessA\";\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const { name, url, description, whatIDid, techStacks, startedAt, endedAt } =\n    project;\n  const { font } = useResponsiveFont();\n  const isMobile = useIsMobile();\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      style={{\n        fontSize: \"0.75rem\",\n      }}\n    >\n      <StylessA href={url}>\n        <Text font={Font.SemiBold} size={font(1)}>\n          {name}\n        </Text>\n\n        {url && <Text size={font(0.75)}>{formatUrl(url)}</Text>}\n      </StylessA>\n\n      <Text size={font(0.75)}>\n        {formatYearMonth(new Date(startedAt))} â€“{\" \"}\n        {endedAt ? formatYearMonth(new Date(endedAt)) : \"Now\"}\n      </Text>\n\n      {description && (\n        <>\n          <Spacer height={\"5px\"} />\n          <ReactMarkdown>{description}</ReactMarkdown>\n        </>\n      )}\n\n      {whatIDid && whatIDid.length > 0 && (\n        <>\n          <Spacer height={\"5px\"} />\n\n          <ul\n            style={{\n              margin: \"0px\",\n              paddingLeft: \"20px\",\n            }}\n          >\n            {whatIDid.map((whatIDid) => (\n              <li key={whatIDid}>\n                <Text size={font(0.75)}>{whatIDid}</Text>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default ProjectCard;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport { Text } from \"@dohyun-ko/react-atoms\";\n\ninterface SectionTitleProps {\n  children?: React.ReactNode;\n}\n\nconst SectionTitle = ({ children }: SectionTitleProps) => {\n  const { font } = useResponsiveFont();\n\n  return (\n    <Text as=\"h1\" font={Font.Bold} size={font(1.25)}>\n      {children}\n    </Text>\n  );\n};\n\nexport default SectionTitle;\n","import Project from \"@/types/Project\";\nimport { Flex, Spacer } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport SectionTitle from \"../components/SectionTitle\";\n\ninterface SideProjectSectionProps {}\n\nconst SideProjectSection = ({}: SideProjectSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Side Projects</SectionTitle>\n\n      <Spacer height={\"10px\"} />\n\n      <Flex flexDirection={\"column\"} gap={\"15px\"}>\n        {(t(\"sideProject.sideProjects\", { returnObjects: true }) as Project[])\n          .filter((sideProject) => sideProject.isImportant)\n          .map((sideProject) => (\n            <ProjectCard key={sideProject.name} project={sideProject} />\n          ))}\n      </Flex>\n    </>\n  );\n};\n\nexport default SideProjectSection;\n","enum Font {\n  Thin = \"PretendardW100\",\n  ExtraLight = \"PretendardW200\",\n  Light = \"PretendardW300\",\n  Regular = \"PretendardW400\",\n  Medium = \"PretendardW500\",\n  SemiBold = \"PretendardW600\",\n  Bold = \"PretendardW700\",\n  ExtraBold = \"PretendardW800\",\n  Black = \"PretendardW900\",\n  SourceCodePro = \"Source Code Pro\",\n}\n\nexport default Font;\n","const formatUrl = (url: string) => {\n  return url.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(/\\/$/, \"\");\n};\n\nexport default formatUrl;\n"],"names":["_ref","project","name","url","description","whatIDid","techStacks","startedAt","endedAt","font","useResponsiveFont","useIsMobile","_jsxs","Flex","flexDirection","style","fontSize","children","StylessA","href","_jsx","Text","Font","SemiBold","size","formatUrl","formatYearMonth","Date","_Fragment","Spacer","height","ReactMarkdown","length","margin","paddingLeft","map","as","Bold","t","useTranslation","SectionTitle","gap","returnObjects","filter","sideProject","isImportant","ProjectCard","replace"],"sourceRoot":""}