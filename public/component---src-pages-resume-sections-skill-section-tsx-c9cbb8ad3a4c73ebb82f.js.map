{"version":3,"file":"component---src-pages-resume-sections-skill-section-tsx-c9cbb8ad3a4c73ebb82f.js","mappings":"yLAaO,MAAMA,GAAgBC,EAAAA,EAAAA,eAAiC,CAC5DC,YAAa,IA6Bf,I,UCjCA,MANoBC,KACHC,EAAAA,EAAAA,YAAWJ,GAEZE,YAAcG,EAAAA,C,qCCgB9B,IArB0BC,KACxB,MAAMC,GAAWJ,EAAAA,EAAAA,KAiBjB,MAAO,CAAEK,KAfKC,GAYL,UAXUF,EAIJ,MADCE,EAEG,MAEAC,KAAKC,MAAa,GAAPF,EAAa,IAAM,GAN3CA,GAUoBG,iBAGX,C,+DCLjB,UARqBC,IAAqC,IAApC,SAAEC,GAA6BD,EACnD,MAAM,KAAEL,IAASF,EAAAA,EAAAA,KAEjB,OACES,EAAAA,EAAAA,KAAA,MAAIC,WAAWC,EAAAA,EAAAA,IAAQ,YAAa,SAAST,EAAK,SAASM,SAAEA,GAAc,C,gECR/E,MAAMI,EAAWC,IACf,OAAQA,GACN,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,aACT,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,aACT,QACE,MAAO,cACX,EAKIC,EAAS,CACb,CACEC,KAAM,QACNF,MAAO,GAET,CACEE,KAAM,aACNF,MAAO,GAET,CACEE,KAAM,UACNF,MAAO,GAET,CACEE,KAAM,SACNF,MAAO,GAET,CACEE,KAAM,SACNF,MAAO,GAET,CACEE,KAAM,UACNF,MAAO,GAET,CACEE,KAAM,UACNF,MAAO,GAET,CACEE,KAAM,MACNF,MAAO,GAET,CACEE,KAAM,SACNF,MAAO,GAET,CACEE,KAAM,SACNF,MAAO,GAET,CACEE,KAAM,OACNF,MAAO,GAET,CACEE,KAAM,WACNF,MAAO,IA0BX,UAtBqBN,IAA2B,MAALA,EACzC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,kBAEd,OACER,EAAAA,EAAAA,KAAA,OAAKC,UAAW,OAAQQ,GAAG,gBAAeV,UACxCW,EAAAA,EAAAA,MAAA,OAAKT,UAAW,UAAUF,SAAA,EACxBC,EAAAA,EAAAA,KAACW,EAAAA,QAAY,CAAAZ,SAAC,YAEdC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,cAEhBD,EAAAA,EAAAA,KAAA,OAAKC,UAAW,8BAA8BF,SAC3CM,EAAOO,KAAKC,IACXb,EAAAA,EAAAA,KAAA,QAAMC,UAAWE,EAAQU,EAAMT,OAAOL,SACnCc,EAAMP,MADmCO,EAAMP,cAMpD,C,uDC3FH,MAAMhB,EAAmB,G","sources":["webpack://dohyun-ko.github.io/./src/App.tsx","webpack://dohyun-ko.github.io/./src/hooks/useIsMobile.tsx","webpack://dohyun-ko.github.io/./src/hooks/useResponsiveFont.tsx","webpack://dohyun-ko.github.io/./src/pages/resume/components/SectionTitle.tsx","webpack://dohyun-ko.github.io/./src/pages/resume/sections/SkillSection.tsx","webpack://dohyun-ko.github.io/./src/utils/const.ts"],"sourcesContent":["import { createContext, useLayoutEffect, useState } from \"react\";\nimport { BrowserRouter, Routes } from \"react-router-dom\";\n\nexport enum RoutePath {\n  HOME = \"/\",\n  RESUME = \"/resume\",\n  PRINTABLE = \"/printable\",\n}\n\ntype LayoutContextType = {\n  windowWidth: number;\n};\n\nexport const LayoutContext = createContext<LayoutContextType>({\n  windowWidth: 0,\n});\n\nfunction App() {\n  const [windowWidth, setWindowWidth] = useState(0);\n\n  useLayoutEffect(() => {\n    const updateWidth = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        windowWidth,\n      }}\n    >\n      <BrowserRouter>\n        <Routes></Routes>\n      </BrowserRouter>\n    </LayoutContext.Provider>\n  );\n}\n\nexport default App;\n","import { LayoutContext } from \"@/App\";\nimport { MOBILE_MAX_WIDTH } from \"@/utils/const\";\nimport { useContext } from \"react\";\n\nconst useIsMobile = () => {\n  const layout = useContext(LayoutContext);\n\n  return layout.windowWidth < MOBILE_MAX_WIDTH;\n};\n\nexport default useIsMobile;\n","import useIsMobile from './useIsMobile';\n\nconst useResponsiveFont = () => {\n  const isMobile = useIsMobile();\n\n  const font = (size: number) => {\n    const resized = !isMobile\n      ? size\n      : (() => {\n          switch (size) {\n            case 3.5:\n              return 2.375;\n            default:\n              return Math.round(size * 0.8 * 16) / 16;\n          }\n        })();\n\n    return `text-[${resized.toString()}rem]`;\n  };\n\n  return { font };\n};\n\nexport default useResponsiveFont;\n","import useResponsiveFont from '@/hooks/useResponsiveFont';\nimport { twMerge } from 'tailwind-merge';\n\ninterface SectionTitleProps {\n  children?: React.ReactNode;\n}\n\nconst SectionTitle = ({ children }: SectionTitleProps) => {\n  const { font } = useResponsiveFont();\n\n  return (\n    <h1 className={twMerge('font-bold', `text-[${font(2.5)}]`)}>{children}</h1>\n  );\n};\n\nexport default SectionTitle;\n","import { useTranslation } from 'react-i18next';\nimport SectionTitle from '../components/SectionTitle';\n\nconst mapFont = (level: number) => {\n  switch (level) {\n    case 1:\n      return 'font-thin';\n    case 2:\n      return 'font-light';\n    case 3:\n      return 'font-medium';\n    case 4:\n      return 'font-bold';\n    case 5:\n      return 'font-black';\n    default:\n      return 'font-normal';\n  }\n};\n\ninterface SkillSectionProps {}\n\nconst skills = [\n  {\n    name: 'React',\n    level: 5,\n  },\n  {\n    name: 'TypeScript',\n    level: 4,\n  },\n  {\n    name: 'Next.js',\n    level: 3,\n  },\n  {\n    name: 'Python',\n    level: 3,\n  },\n  {\n    name: 'NestJS',\n    level: 2,\n  },\n  {\n    name: 'FastAPI',\n    level: 2,\n  },\n  {\n    name: 'Flutter',\n    level: 2,\n  },\n  {\n    name: 'C++',\n    level: 2,\n  },\n  {\n    name: 'Kotlin',\n    level: 1,\n  },\n  {\n    name: 'Docker',\n    level: 1,\n  },\n  {\n    name: 'Rust',\n    level: 1,\n  },\n  {\n    name: 'Assembly',\n    level: 1,\n  },\n];\n\nconst SkillSection = ({}: SkillSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={'Area'} id=\"skill-section\">\n      <div className={'Content'}>\n        <SectionTitle>Skills</SectionTitle>\n\n        <div className={'h-[30px]'} />\n\n        <div className={'grid grid-cols-3 gap-[10px]'}>\n          {skills.map((skill) => (\n            <span className={mapFont(skill.level)} key={skill.name}>\n              {skill.name}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SkillSection;\n","export const MOBILE_MAX_WIDTH = 768;\n"],"names":["LayoutContext","createContext","windowWidth","useIsMobile","useContext","MOBILE_MAX_WIDTH","useResponsiveFont","isMobile","font","size","Math","round","toString","_ref","children","_jsx","className","twMerge","mapFont","level","skills","name","t","useTranslation","id","_jsxs","SectionTitle","map","skill"],"sourceRoot":""}