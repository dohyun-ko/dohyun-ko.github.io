{"version":3,"file":"component---src-pages-printable-index-tsx-175a8668b3f98caea3d5.js","mappings":"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","sources":["webpack://dohyun-ko.github.io/./src/pages/printable/components/Card.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/OrganizationCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/ProjectCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/PublicationCard.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/components/SectionTitle.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/index.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/AwardsSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/EducationSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/ExperienceSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/PublicationSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/SideProjectSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/SkillSection.tsx","webpack://dohyun-ko.github.io/./src/pages/printable/sections/TitleSection.tsx","webpack://dohyun-ko.github.io/./src/types/Font.ts","webpack://dohyun-ko.github.io/./src/utils/formatUrl.ts"],"sourcesContent":["import { MOBILE_MAX_WIDTH } from \"@/utils/const\";\nimport { Grid } from \"@dohyun-ko/react-atoms\";\nimport styled from \"styled-components\";\n\ninterface CardProps {}\n\nconst Card = styled(Grid)`\n  gap: 30px;\n  grid-template-columns: 160px 1fr;\n\n  @media screen and (max-width: ${MOBILE_MAX_WIDTH}px) {\n    grid-template-columns: 1fr;\n  }\n`;\nexport default Card;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport Organization from \"@/types/Organization\";\nimport { formatYearMonth } from \"@/utils/dateFormats\";\nimport formatUrl from \"@/utils/formatUrl\";\nimport { Flex, Text } from \"@dohyun-ko/react-atoms\";\nimport StylessA from \"../../../components/StylessA\";\nimport Card from \"./Card\";\nimport ProjectCard from \"./ProjectCard\";\n\ninterface OrganizationCardProps {\n  organization: Organization;\n}\n\nconst OrganizationCard = ({ organization }: OrganizationCardProps) => {\n  const { name, color, url, job, startedAt, endedAt, projects } = organization;\n  const { font } = useResponsiveFont();\n\n  return (\n    <Card>\n      <Flex\n        flexDirection=\"column\"\n        style={{\n          borderLeft: `5px solid ${color || \"gray\"}`,\n          paddingLeft: \"10px\",\n        }}\n      >\n        <StylessA href={url}>\n          <Flex>\n            <Text font={Font.Bold} size={font(1)}>\n              {name}\n            </Text>\n\n            {url && <Text size={font(0.75)}>{formatUrl(url)}</Text>}\n          </Flex>\n        </StylessA>\n\n        <Text size={font(0.75)}>{job}</Text>\n\n        <Text size={font(0.75)}>\n          {formatYearMonth(new Date(startedAt))} –{\" \"}\n          {endedAt ? formatYearMonth(new Date(endedAt)) : \"Now\"}\n        </Text>\n      </Flex>\n\n      <Flex flexDirection=\"column\" gap={\"20px\"}>\n        {projects\n          .filter((project) => project.isImportant)\n          .map((project) => (\n            <ProjectCard key={project.name} project={project} />\n          ))}\n      </Flex>\n    </Card>\n  );\n};\n\nexport default OrganizationCard;\n","import useIsMobile from \"@/hooks/useIsMobile\";\nimport useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport Project from \"@/types/Project\";\nimport { formatYearMonth } from \"@/utils/dateFormats\";\nimport formatUrl from \"@/utils/formatUrl\";\nimport { Flex, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport ReactMarkdown from \"react-markdown\";\nimport StylessA from \"../../../components/StylessA\";\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const { name, url, description, whatIDid, techStacks, startedAt, endedAt } =\n    project;\n  const { font } = useResponsiveFont();\n  const isMobile = useIsMobile();\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      style={{\n        fontSize: \"0.75rem\",\n      }}\n    >\n      <StylessA href={url}>\n        <Text font={Font.SemiBold} size={font(1)}>\n          {name}\n        </Text>\n\n        {url && <Text size={font(0.75)}>{formatUrl(url)}</Text>}\n      </StylessA>\n\n      <Text size={font(0.75)}>\n        {formatYearMonth(new Date(startedAt))} –{\" \"}\n        {endedAt ? formatYearMonth(new Date(endedAt)) : \"Now\"}\n      </Text>\n\n      {description && (\n        <>\n          <Spacer height={\"5px\"} />\n          <ReactMarkdown>{description}</ReactMarkdown>\n        </>\n      )}\n\n      {whatIDid && whatIDid.length > 0 && (\n        <>\n          <Spacer height={\"5px\"} />\n\n          <ul\n            style={{\n              margin: \"0px\",\n              paddingLeft: \"20px\",\n            }}\n          >\n            {whatIDid.map((whatIDid) => (\n              <li key={whatIDid}>\n                <Text size={font(0.75)}>{whatIDid}</Text>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default ProjectCard;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport Publication from \"@/types/Publication\";\nimport { formatYearMonth } from \"@/utils/dateFormats\";\nimport { Flex, Text } from \"@dohyun-ko/react-atoms\";\nimport ReactMarkdown from \"react-markdown\";\nimport StylessA from \"../../../components/StylessA\";\n\ninterface PublicationCardProps {\n  publication: Publication;\n}\n\nconst PublicationCard = ({ publication }: PublicationCardProps) => {\n  const { name, date, url, description, publisher } = publication;\n  const { font } = useResponsiveFont();\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      style={{\n        fontSize: \"0.75rem\",\n      }}\n    >\n      <StylessA href={url}>\n        <Text font={Font.SemiBold} size={font(1)}>\n          {name}\n        </Text>\n      </StylessA>\n\n      <Text size={font(0.75)}>\n        {publisher} - {formatYearMonth(new Date(date))}\n      </Text>\n\n      <ReactMarkdown>{description}</ReactMarkdown>\n    </Flex>\n  );\n};\n\nexport default PublicationCard;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport { Text } from \"@dohyun-ko/react-atoms\";\n\ninterface SectionTitleProps {\n  children?: React.ReactNode;\n}\n\nconst SectionTitle = ({ children }: SectionTitleProps) => {\n  const { font } = useResponsiveFont();\n\n  return (\n    <Text as=\"h1\" font={Font.Bold} size={font(1.25)}>\n      {children}\n    </Text>\n  );\n};\n\nexport default SectionTitle;\n","import { Area, Content, Spacer } from \"@dohyun-ko/react-atoms\";\n\nimport { graphql } from \"gatsby\";\nimport AwardSection from \"./sections/AwardsSection\";\nimport EducationSection from \"./sections/EducationSection\";\nimport ExperienceSection from \"./sections/ExperienceSection\";\nimport PublicationSection from \"./sections/PublicationSection\";\nimport SideProjectSection from \"./sections/SideProjectSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport TitleSection from \"./sections/TitleSection\";\n\nconst PrintablePage = () => {\n  return (\n    <Area>\n      <Content width={\"92%\"}>\n        <TitleSection />\n\n        <Spacer height={\"20px\"} />\n\n        <SkillSection />\n\n        <Spacer height={\"30px\"} />\n\n        <ExperienceSection />\n\n        <Spacer height={\"30px\"} />\n\n        <EducationSection />\n\n        <Spacer height={\"30px\"} />\n\n        <PublicationSection />\n\n        <Spacer height={\"20px\"} />\n\n        <SideProjectSection />\n\n        <Spacer height={\"20px\"} />\n\n        <AwardSection />\n      </Content>\n    </Area>\n  );\n};\n\nexport default PrintablePage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","import Project from \"@/types/Project\";\nimport { Flex, Spacer } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport SectionTitle from \"../components/SectionTitle\";\n\ninterface AwardSection {}\n\nconst AwardSection = ({}: AwardSection) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Awards</SectionTitle>\n\n      <Spacer height={\"10px\"} />\n\n      <Flex flexDirection={\"column\"} gap={\"0px\"}>\n        {(t(\"award.list\", { returnObjects: true }) as Project[])\n          .filter((award) => award.isImportant)\n          .map((award) => (\n            <ProjectCard key={award.name} project={award} />\n          ))}\n      </Flex>\n    </>\n  );\n};\n\nexport default AwardSection;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport { Flex, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport Card from \"../components/Card\";\nimport SectionTitle from \"../components/SectionTitle\";\n\ninterface EducationSectionProps {}\n\nconst EducationSection = ({}: EducationSectionProps) => {\n  const { t } = useTranslation();\n  const { font } = useResponsiveFont();\n\n  return (\n    <>\n      <SectionTitle>학력</SectionTitle>\n\n      <Spacer height={\"10px\"} />\n\n      <Card>\n        <Flex\n          gap={\"20px\"}\n          style={{\n            borderLeft: `5px solid #EB0D00`,\n            paddingLeft: \"10px\",\n          }}\n        >\n          <Flex flexDirection={\"column\"} gap={\"30px\"}>\n            <Flex flexDirection={\"column\"}>\n              <Text font={Font.Bold} size={font(1)}>\n                GIST\n              </Text>\n              <Text size={\"1rem\"}>{t(\"education.major\")}</Text>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex flexDirection={\"column\"}>\n          <Text size={font(1)}>TGPA 4.04 / 4.5</Text>\n          <Text size={font(0.75)}>2022. 2 – </Text>\n        </Flex>\n\n        {/* <Flex flexDirection={\"column\"} width={\"100%\"} gap={\"10px\"}>\n          <Text size={font(0.75)} weight={\"bold\"}>\n            {t(\"education.attendedLecture\")}\n          </Text>\n\n          <Flex gap={\"0 10px\"} wrap={\"wrap\"}>\n            <Text size={font(0.75)}>\n              {(\n                t(\"education.attendedLectures\", {\n                  returnObjects: true,\n                }) as string[]\n              ).map((item, index, array) => (\n                <span key={item}>\n                  {index < array.length - 1\n                    ? [item, <span style={{ padding: \"0 6px\" }}>|</span>]\n                    : item}\n                </span>\n              ))}\n            </Text>\n          </Flex>\n        </Flex> */}\n      </Card>\n    </>\n  );\n};\n\nexport default EducationSection;\n","import Organization from \"@/types/Organization\";\nimport { Flex, Spacer } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport OrganizationCard from \"../components/OrganizationCard\";\nimport SectionTitle from \"../components/SectionTitle\";\n\ninterface ExperienceSectionProps {}\n\nconst ExperienceSection = ({}: ExperienceSectionProps) => {\n  const { t } = useTranslation();\n\n  const organizations = [\n    ...(\n      t(\"experience.experiences\", {\n        returnObjects: true,\n      }) as Organization[]\n    ).reverse(),\n    ...(t(\"current.organizations\", {\n      returnObjects: true,\n    }) as Organization[]),\n  ].filter((experience) => experience.isImportant);\n\n  return (\n    <>\n      <SectionTitle>경력</SectionTitle>\n\n      <Spacer height={\"10px\"} />\n\n      <Flex flexDirection={\"column\"} gap={\"20px\"}>\n        {organizations.map((experience) => (\n          <OrganizationCard key={experience.name} organization={experience} />\n        ))}\n      </Flex>\n    </>\n  );\n};\n\nexport default ExperienceSection;\n","import Publication from \"@/types/Publication\";\nimport { Flex, Spacer } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport PublicationCard from \"../components/PublicationCard\";\nimport SectionTitle from \"../components/SectionTitle\";\n\ninterface PublicationSectionProps {}\n\nconst PublicationSection = ({}: PublicationSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Publications</SectionTitle>\n\n      <Spacer height={\"5px\"} />\n\n      <Flex flexDirection={\"column\"} gap={\"20px\"}>\n        {(\n          t(\"publication.publications\", {\n            returnObjects: true,\n          }) as Publication[]\n        ).map((publication) => (\n          <PublicationCard key={publication.name} publication={publication} />\n        ))}\n      </Flex>\n    </>\n  );\n};\n\nexport default PublicationSection;\n","import Project from \"@/types/Project\";\nimport { Flex, Spacer } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport SectionTitle from \"../components/SectionTitle\";\n\ninterface SideProjectSectionProps {}\n\nconst SideProjectSection = ({}: SideProjectSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <SectionTitle>Side Projects</SectionTitle>\n\n      <Spacer height={\"10px\"} />\n\n      <Flex flexDirection={\"column\"} gap={\"15px\"}>\n        {(t(\"sideProject.sideProjects\", { returnObjects: true }) as Project[])\n          .filter((sideProject) => sideProject.isImportant)\n          .map((sideProject) => (\n            <ProjectCard key={sideProject.name} project={sideProject} />\n          ))}\n      </Flex>\n    </>\n  );\n};\n\nexport default SideProjectSection;\n","import Font from \"@/types/Font\";\nimport { Flex, Grid, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport SectionTitle from \"../components/SectionTitle\";\n\nconst mapFont = (level: number): Font => {\n  switch (level) {\n    case 1:\n      return Font.Thin;\n    case 2:\n      return Font.Light;\n    case 3:\n      return Font.Medium;\n    case 4:\n      return Font.Bold;\n    case 5:\n      return Font.Black;\n    default:\n      return Font.Regular;\n  }\n};\n\ninterface SkillSectionProps {}\n\nconst skills = [\n  {\n    name: \"React\",\n    level: 5,\n  },\n  {\n    name: \"TypeScript\",\n    level: 4,\n  },\n  {\n    name: \"Next.js\",\n    level: 3,\n  },\n\n  {\n    name: \"Python\",\n    level: 3,\n  },\n  {\n    name: \"NestJS\",\n    level: 2,\n  },\n  {\n    name: \"FastAPI\",\n    level: 2,\n  },\n  {\n    name: \"Flutter\",\n    level: 2,\n  },\n  {\n    name: \"C++\",\n    level: 2,\n  },\n];\n\nconst SkillSection = ({}: SkillSectionProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Flex>\n        <SectionTitle>보유기술</SectionTitle>\n      </Flex>\n\n      <Spacer height={\"10px\"} />\n\n      <Grid gridTemplateColumns=\"70px 1fr\" gap={\"0px\"}>\n        <Text>전문:</Text>\n\n        <Text font={Font.SourceCodePro} className={\"source-code-pro\"}>\n          React&nbsp; TypeScript&nbsp; Next.js\n        </Text>\n\n        <Text>활용:</Text>\n\n        <Text font={Font.SourceCodePro}>\n          Python&nbsp; NestJS&nbsp; FastAPI&nbsp; Flutter\n        </Text>\n      </Grid>\n    </>\n  );\n};\n\nexport default SkillSection;\n","import useResponsiveFont from \"@/hooks/useResponsiveFont\";\nimport Font from \"@/types/Font\";\nimport { Flex, Spacer, Text } from \"@dohyun-ko/react-atoms\";\nimport { useTranslation } from \"react-i18next\";\nimport StylessA from \"../../../components/StylessA\";\n\ninterface TitleSectionProps {}\n\nconst TitleSection = ({}: TitleSectionProps) => {\n  const { t } = useTranslation();\n  const { font } = useResponsiveFont();\n\n  return (\n    <>\n      <Text as={\"h1\"} font={Font.Bold} size={font(2)}>\n        {t(\"title.name\")}\n      </Text>\n\n      <Text font={Font.Medium} size={font(0.75)}>\n        {t(\"introduction\")}\n      </Text>\n\n      <Spacer height={\"10px\"} />\n\n      <Flex>\n        <Text size={font(0.875)}>\n          <StylessA href=\"mailto:dohyun682@gmail.com\" hasIcon={false}>\n            dohyun682@gmail.com\n          </StylessA>{\" \"}\n          | 010-3351-0168 |{\" \"}\n          <StylessA href=\"https://github.com/dohyun-ko\" hasIcon={false}>\n            github.com/dohyun-ko\n          </StylessA>{\" \"}\n          <br />\n          Detailed Resume:{\" \"}\n          <StylessA href=\"https://dohyun.is-a.dev/resume\" hasIcon={false}>\n            dohyun.is-a.dev\n          </StylessA>\n        </Text>\n      </Flex>\n    </>\n  );\n};\n\nexport default TitleSection;\n","enum Font {\n  Thin = \"PretendardW100\",\n  ExtraLight = \"PretendardW200\",\n  Light = \"PretendardW300\",\n  Regular = \"PretendardW400\",\n  Medium = \"PretendardW500\",\n  SemiBold = \"PretendardW600\",\n  Bold = \"PretendardW700\",\n  ExtraBold = \"PretendardW800\",\n  Black = \"PretendardW900\",\n  SourceCodePro = \"Source Code Pro\",\n}\n\nexport default Font;\n","const formatUrl = (url: string) => {\n  return url.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(/\\/$/, \"\");\n};\n\nexport default formatUrl;\n"],"names":["Card","styled","Grid","MOBILE_MAX_WIDTH","_ref","organization","name","color","url","job","startedAt","endedAt","projects","font","useResponsiveFont","_jsxs","children","Flex","flexDirection","style","borderLeft","paddingLeft","_jsx","StylessA","href","Text","Font","Bold","size","formatUrl","formatYearMonth","Date","gap","filter","project","isImportant","map","ProjectCard","description","whatIDid","techStacks","useIsMobile","fontSize","SemiBold","_Fragment","Spacer","height","ReactMarkdown","length","margin","publication","date","publisher","as","PrintablePage","Area","Content","width","TitleSection","SkillSection","ExperienceSection","EducationSection","PublicationSection","SideProjectSection","AwardSection","t","useTranslation","SectionTitle","returnObjects","award","organizations","concat","_toConsumableArray","reverse","experience","OrganizationCard","PublicationCard","sideProject","gridTemplateColumns","SourceCodePro","className","Medium","hasIcon","replace"],"sourceRoot":""}